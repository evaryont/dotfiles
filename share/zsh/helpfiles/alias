alias [ {+|-}gmrsL ] [ name[=value] ... ]
       For  each  name with a corresponding value, define an alias with that value.  A trailing space in value causes the nex
       sion.  If the -g flag is present, define a global alias; global aliases are expanded even if they do not occur in comm

       If the -s flags is present, define a suffix alias: if the command word on a command line is in the form `text.name', w
       is replaced by the text `value text.name'.  Note that name is treated as a literal string, not a pattern.  A trailing 
       case.  For example,

              alias -s ps=gv

       will cause the command `*.ps' to be expanded to `gv *.ps'.  As alias expansion is carried out earlier than globbing, t
       Suffix  aliases  constitute  a different name space from other aliases (so in the above example it is still possible t
       and the two sets are never listed together.

       For each name with no value, print the value of name, if any.  With no arguments, print all currently defined aliases 
       flag  is given the arguments are taken as patterns (they should be quoted to preserve them from being interpreted as g
       ing these patterns are printed.  When printing aliases and one of the -g, -r or -s flags is present, restrict the prin
       aliases,  respectively;  a  regular alias is one which is neither a global nor a suffix alias.   Using `+' instead of 
       single `+', prevents the values of the aliases from being printed.

       If the -L flag is present, then print each alias in a manner suitable for putting in a startup script.  The exit statu
       value) is given for which no alias has been defined.

       For more on aliases, include common problems, see the section ALIASING in zshmisc(1).
